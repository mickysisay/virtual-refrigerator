[{"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js":"1","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js":"2","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js":"4","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js":"5","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js":"6","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js":"7","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js":"8"},{"size":1183,"mtime":1606782465778,"results":"9","hashOfConfig":"10"},{"size":2298,"mtime":1606781590419,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":53,"mtime":1606691269635,"results":"13","hashOfConfig":"10"},{"size":832,"mtime":1606711101828,"results":"14","hashOfConfig":"10"},{"size":439,"mtime":1606715504034,"results":"15","hashOfConfig":"10"},{"size":212,"mtime":1606766291666,"results":"16","hashOfConfig":"10"},{"size":3218,"mtime":1606782945707,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y97eec",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js",["37"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Requests from  \"../Utils/Requests\"\r\nimport LoadingButton from \"./LoadingButton\"\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            error:{\r\n                status:false,\r\n                message:\"\"\r\n            },\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleInputChange = (e) =>{\r\n        if(e.target.id === \"username\"){\r\n        this.setState({\r\n          username : e.target.value        \r\n        });\r\n        }else if(e.target.id === \"password\"){\r\n            this.setState({\r\n                password:e.target.value\r\n            });\r\n        }\r\n    }\r\n    handleLoginSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        //set is loading to true;\r\n        this.setState({\r\n            isLoading : true\r\n        });\r\n       const resp = await Requests.loginPost(this.state);\r\n       //resp has statusCode and message and status\r\n       const statusCode = resp.statusCode;\r\n       const message = resp.message.message;\r\n       if(statusCode === 200){\r\n            //redirect to other route\r\n       }else{\r\n           //display error message\r\n           this.setState({\r\n               error:{\r\n                   status:true,\r\n                   message: message\r\n               }\r\n           });\r\n       }\r\n       this.setState({\r\n           isLoading : false\r\n       });\r\n       console.log(resp);\r\n    }\r\n\r\n    componentDidMount(){\r\n     \r\n    }\r\n    \r\n    render(){\r\n\r\n        return (<div>\r\n            <h1>Hello world</h1>\r\n             <div>{this.state.isLoading ? <LoadingButton /> : null}</div>\r\n             \r\n            <hr></hr>\r\n            <form onSubmit = {(e)=>{this.handleLoginSubmit(e)}}>\r\n                <label>Username : <input type=\"text\" id = \"username\" onChange = {(e)=>{this.handleInputChange(e)}} /></label><hr />\r\n                <label>Password : <input type=\"password\" id = \"password\" onChange = {(e) =>{this.handleInputChange(e)}} /></label><hr />\r\n                <button>Login</button>\r\n            </form><hr />\r\n             <h3>{this.state.error.status ? this.state.error.message : null}</h3>\r\n        </div>);\r\n    };\r\n\r\n}",["38","39"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js",["40","41","42","43","44","45","46"],"import {Component} from \"react\";\r\nimport {  BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    history ,\r\n    useHistory,\r\n    useLocation} from 'react-router-dom'\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      localStorage.getItem(\"token\")\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n    )} />\r\n)\r\n","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js",["47"],{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"48","severity":1,"message":"56","line":1,"column":9,"nodeType":"50","messageId":"51","endLine":1,"endColumn":18},{"ruleId":"48","severity":1,"message":"57","line":2,"column":28,"nodeType":"50","messageId":"51","endLine":2,"endColumn":34},{"ruleId":"48","severity":1,"message":"58","line":3,"column":5,"nodeType":"50","messageId":"51","endLine":3,"endColumn":11},{"ruleId":"48","severity":1,"message":"59","line":5,"column":5,"nodeType":"50","messageId":"51","endLine":5,"endColumn":9},{"ruleId":"48","severity":1,"message":"60","line":7,"column":5,"nodeType":"50","messageId":"51","endLine":7,"endColumn":12},{"ruleId":"48","severity":1,"message":"61","line":8,"column":5,"nodeType":"50","messageId":"51","endLine":8,"endColumn":15},{"ruleId":"48","severity":1,"message":"62","line":9,"column":5,"nodeType":"50","messageId":"51","endLine":9,"endColumn":16},{"ruleId":"48","severity":1,"message":"63","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'Component' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'history' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Requests' is defined but never used.","no-global-assign","no-unsafe-negation"]