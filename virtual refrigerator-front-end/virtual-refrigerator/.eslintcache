[{"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js":"1","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js":"2","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js":"4","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js":"5","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js":"6","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js":"7","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js":"8","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\index.js":"9","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\MainPage.js":"10","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\PublicRoute.js":"11","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Logout.js":"12","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\backendAPI.js":"13","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\RefrigeratorCard.js":"14","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ShowRefrigerator.js":"15","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddRefrigeratorModal.js":"16","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ItemScanner.js":"17","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\GetItemBarCode.js":"18","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddPersonalItem.js":"19","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\PersonalItemShow.js":"20","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\RefrigeratorItemShow.js":"21","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddRefrigeratorItem.js":"22","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\EditRefrigeratorItem.js":"23","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\TakeItem.js":"24","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ScanForRefrigeratorItem.js":"25","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\UsersAccess.js":"26"},{"size":2769,"mtime":1608942540326,"results":"27","hashOfConfig":"28"},{"size":8863,"mtime":1608588292579,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":607,"mtime":1611031380523,"results":"31","hashOfConfig":"28"},{"size":985,"mtime":1607060821123,"results":"32","hashOfConfig":"28"},{"size":794,"mtime":1609138680990,"results":"33","hashOfConfig":"28"},{"size":217,"mtime":1607119478245,"results":"34","hashOfConfig":"28"},{"size":12462,"mtime":1609779313094,"results":"35","hashOfConfig":"28"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"28"},{"size":1913,"mtime":1609579938261,"results":"37","hashOfConfig":"28"},{"size":428,"mtime":1608588380884,"results":"38","hashOfConfig":"28"},{"size":377,"mtime":1608565253002,"results":"39","hashOfConfig":"28"},{"size":10238,"mtime":1609699469096,"results":"40","hashOfConfig":"28"},{"size":5273,"mtime":1609619466498,"results":"41","hashOfConfig":"28"},{"size":9828,"mtime":1609620343167,"results":"42","hashOfConfig":"28"},{"size":2374,"mtime":1608565258205,"results":"43","hashOfConfig":"28"},{"size":3010,"mtime":1609199893829,"results":"44","hashOfConfig":"28"},{"size":1296,"mtime":1608929583821,"results":"45","hashOfConfig":"28"},{"size":4237,"mtime":1609095384290,"results":"46","hashOfConfig":"28"},{"size":1646,"mtime":1609052618456,"results":"47","hashOfConfig":"28"},{"size":4748,"mtime":1609107711181,"results":"48","hashOfConfig":"28"},{"size":6076,"mtime":1609098612706,"results":"49","hashOfConfig":"28"},{"size":5334,"mtime":1609187129385,"results":"50","hashOfConfig":"28"},{"size":5002,"mtime":1609186925176,"results":"51","hashOfConfig":"28"},{"size":2616,"mtime":1609103146160,"results":"52","hashOfConfig":"28"},{"size":7689,"mtime":1609639721013,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"y97eec",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js",[],["113","114"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js",["115"],"import React from \"react\";\r\nimport LoadingButton from \"./LoadingButton\"\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBModalFooter } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './login.css'\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport backendAPI from '../Utils/backendAPI'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            username: {\r\n                value: \"\",\r\n                error: \"\"\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                error: \"\"\r\n            },\r\n            error: {\r\n                status: false,\r\n                message: \"\"\r\n            },\r\n            isLoading: false\r\n        }\r\n    }\r\n    handleInputChange = (e) => {\r\n \r\n        if (e.target.id === \"username\") {\r\n            const username = this.state.username;\r\n            username.value = e.target.value;\r\n            this.setState({\r\n                username: username\r\n            });\r\n        } else if (e.target.id === \"password\") {\r\n            const password = this.state.password;\r\n            password.value = e.target.value;\r\n            this.setState({\r\n                password: password\r\n            });\r\n        }\r\n        \r\n    }\r\n    handleBlurUsername = (e) => {\r\n        //const whichInput = e.target.id;\r\n        const username = this.state.username;\r\n\r\n        if (this.state.username.value === \"\") {\r\n            username.error = \"Username is empty\";\r\n            this.setState({\r\n                username: username\r\n            });\r\n        } else if (this.state.username.value.length < 6) {\r\n            username.error = \"Username too short\";\r\n            this.setState({\r\n                username: username\r\n            });\r\n        } else {\r\n            username.error = \"\";\r\n            this.setState({\r\n                username: username\r\n            });\r\n        }\r\n    }\r\n    handleBlurPassword = (e) => {\r\n        const password = this.state.password;\r\n        if (this.state.password.value === \"\") {\r\n            password.error = \"Password can't be empty\";\r\n            this.setState({\r\n                password: password\r\n            });\r\n        } else if (this.state.password.value.length < 6) {\r\n            password.error = \"Password is too short\";\r\n            this.setState({\r\n                password: password\r\n            });\r\n        } else {\r\n            password.error = \"\";\r\n            this.setState({\r\n                password: password\r\n            });\r\n        }\r\n    }\r\n    handleLoginSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.username.value.length === 0) {\r\n            const username = this.state.username;\r\n            username.error = \"username can't be empty\";\r\n            this.setState({\r\n                username: username\r\n            });\r\n            return;\r\n        }\r\n        if (this.state.password.value.length === 0) {\r\n            const password = this.state.password;\r\n            password.error = \"password can't be empty\";\r\n            this.setState({\r\n                password: password\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (this.state.username.error !== \"\" || this.state.password.error !== \"\") {\r\n            return;\r\n        }\r\n        //set is loading to true;\r\n        this.setState({ isLoading: true });\r\n        const dataToSend = {\r\n            \"username\": this.state.username.value,\r\n            \"password\": this.state.password.value\r\n        }\r\n        const resp = await backendAPI.loginRequest(dataToSend);\r\n\r\n        //resp has statusCode and message and status\r\n        const statusCode = resp.statusCode;\r\n        const message = resp.message.message;\r\n        let referrer = \"\";\r\n        try {\r\n            referrer = this.props.location.state.referrer;\r\n        } catch (ex) { };\r\n\r\n        if (statusCode === 200) {\r\n            const token = resp.message.type + \" \" + resp.message.token;\r\n            localStorage.setItem(\"token\", token);\r\n            this.props.updateLoggedIn();\r\n            this.props.history.push(referrer);\r\n           \r\n            //redirect to other route\r\n        } else {\r\n            //display error message\r\n            this.setState({\r\n                error: {\r\n                    status: true,\r\n                    message: message\r\n                }\r\n            });\r\n          \r\n        }\r\n      \r\n       \r\n            this.setState({ isLoading: false });\r\n\r\n      \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.error.status === true) {\r\n            NotificationManager.error('Error message', this.state.error.message, 1000, () => {\r\n                alert('callback');\r\n            });\r\n            this.setState({\r\n                error: {\r\n                    status: false,\r\n                    message: \"\"\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return ( <LoadingOverlay\r\n            active={this.state.isLoading}\r\n            spinner\r\n                text='Loading your content...'\r\n        ><div>\r\n\r\n            {/* <div>{!this.state.isLoading ? \r\n            //<div>loading</div>\r\n            \r\n            <LoadingButton />\r\n             : null}</div> */}\r\n            \r\n            <div className=\" login-bar\">\r\n                <MDBContainer className=\" mt-5\"  >\r\n                    <MDBRow className=\"align-middle align-items-center justify-content-center mt-5\">\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard >\r\n                                <MDBCardBody >\r\n                                    <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\r\n                                        <h3 className=\"my-3\">\r\n                                            <MDBIcon icon=\"lock\" /> Login:\r\n                                         </h3>\r\n                                    </MDBCardHeader>\r\n                                    <form onSubmit={(e) => { this.handleLoginSubmit(e) }}>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput label=\"username\" icon=\"user\"\r\n                                                id=\"username\"\r\n                                                onChange={(e) => { this.handleInputChange(e) }}\r\n                                                onBlur={(e) => { this.handleBlurUsername(e) }}\r\n                                                data-testid=\"username\" />\r\n                                            <p\r\n                                            data-testid = \"usernameError\"\r\n                                            className=\"error-message\">{this.state.username.error}</p>\r\n                                            <MDBInput label=\"password\" icon=\"lock\" group type=\"password\" validate\r\n                                                id=\"password\" onChange={(e) => { this.handleInputChange(e) }}\r\n                                                onBlur={(e) => { this.handleBlurPassword(e) }} \r\n                                                data-testid=\"password\">\r\n                                               \r\n                                                </MDBInput>\r\n                                            <p\r\n                                            data-testid = \"passwordError\"\r\n                                            className=\"error-message\">{this.state.password.error}</p>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <MDBBtn onClick={(e) => { this.handleLoginSubmit(e) }}\r\n                                            data-testid=\"loginButton\">Login</MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                    <MDBModalFooter>\r\n                                        <div className=\"font-weight-light\">\r\n                                            <p>Not a member? <a href=\"/signup\">  Sign Up</a></p>\r\n\r\n                                        </div>\r\n                                    </MDBModalFooter>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <NotificationContainer />\r\n            </div>\r\n\r\n           \r\n        </div> </LoadingOverlay>);\r\n    };\r\n\r\n}",["116","117"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js",[],["118","119"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js",[],["120","121"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\MainPage.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\PublicRoute.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Logout.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\backendAPI.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\RefrigeratorCard.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ShowRefrigerator.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddRefrigeratorModal.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ItemScanner.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\GetItemBarCode.js",[],["122","123"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddPersonalItem.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\PersonalItemShow.js",["124","125","126"],"import React from \"react\";\r\nimport backendAPI from '../Utils/backendAPI'\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport './login.css'\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport AddRefrigeratorItem from './AddRefrigeratorItem'\r\n\r\nexport default class PersonalItemShow extends React.Component {\r\n    constructor(props){      \r\n        super(props)\r\n        const info = this.props.personalItem;\r\n        this.state = {\r\n          id: info[\"id\"],\r\n          itemName : info[\"item_name\"],\r\n          barCode : info[\"bar_code\"],\r\n          info: info\r\n        }  \r\n    }\r\n    addToRefrigerator =() =>{\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                <AddRefrigeratorItem onClose = {onClose} refrigeratorId={this.props.refrigeratorId} setRefrigeratorItems = {this.props.setItem} itemInfo={this.state.info} />     \r\n                );\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return (<div className = \"personal-Item\"  onClick = {(e)=>{console.log(\"whole\")}}>\r\n            <div className=\"left\">\r\n            {this.state.itemName}\r\n            </div>\r\n            <div className=\"right\">\r\n            <MDBIcon onClick={(e)=>{e.stopPropagation();console.log(\"trash\")}} icon=\"trash-alt\" className='mr-2' >\r\n                </MDBIcon>\r\n            <MDBIcon onClick={(e)=>{e.stopPropagation();this.addToRefrigerator()}} icon=\"plus\" className='mr-1' >\r\n                </MDBIcon>\r\n             </div>\r\n        </div>);\r\n    }\r\n}","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\RefrigeratorItemShow.js",["127","128","129"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\AddRefrigeratorItem.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\EditRefrigeratorItem.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\TakeItem.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\ScanForRefrigeratorItem.js",["130"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\UsersAccess.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":21},{"ruleId":"132","replacedBy":"140"},{"ruleId":"134","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"132","replacedBy":"144"},{"ruleId":"134","replacedBy":"145"},{"ruleId":"132","replacedBy":"146"},{"ruleId":"134","replacedBy":"147"},{"ruleId":"136","severity":1,"message":"148","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":18},{"ruleId":"136","severity":1,"message":"149","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":31},{"ruleId":"136","severity":1,"message":"150","line":4,"column":33,"nodeType":"138","messageId":"139","endLine":4,"endColumn":52},{"ruleId":"136","severity":1,"message":"149","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":31},{"ruleId":"136","severity":1,"message":"150","line":4,"column":33,"nodeType":"138","messageId":"139","endLine":4,"endColumn":52},{"ruleId":"136","severity":1,"message":"151","line":7,"column":18,"nodeType":"138","messageId":"139","endLine":7,"endColumn":26},{"ruleId":"136","severity":1,"message":"152","line":7,"column":17,"nodeType":"138","messageId":"139","endLine":7,"endColumn":22},{"ruleId":"136","severity":1,"message":"151","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":18},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'LoadingButton' is defined but never used.","Identifier","unusedVar",["153"],["154"],["153"],["154"],["153"],["154"],["153"],["154"],"'backendAPI' is defined but never used.","'NotificationContainer' is defined but never used.","'NotificationManager' is defined but never used.","'MDBInput' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation"]