[{"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js":"1","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js":"2","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js":"4","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js":"5","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js":"6","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js":"7","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js":"8","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\index.js":"9","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\MainPage.js":"10"},{"size":1804,"mtime":1607058122838,"results":"11","hashOfConfig":"12"},{"size":6656,"mtime":1607058565366,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":53,"mtime":1606691269635,"results":"15","hashOfConfig":"12"},{"size":985,"mtime":1607060821123,"results":"16","hashOfConfig":"12"},{"size":523,"mtime":1607058348880,"results":"17","hashOfConfig":"12"},{"size":212,"mtime":1606766291666,"results":"18","hashOfConfig":"12"},{"size":3219,"mtime":1607053583125,"results":"19","hashOfConfig":"12"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"12"},{"size":216,"mtime":1607060860865,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y97eec",{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Login.js",["47","48","49","50","51"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Requests from \"../Utils/Requests\"\r\nimport LoadingButton from \"./LoadingButton\"\r\nimport { Navbar as Navigationbar, Nav as Navigation, Form, Button } from 'react-bootstrap';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBModalFooter } from 'mdbreact';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './login.css'\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            inputError: {\r\n                status: true,\r\n                message: \"Username is empty\"\r\n            },\r\n            error: {\r\n                status: false,\r\n                message: \"\"\r\n            },\r\n            isLoading: false\r\n        }\r\n    }\r\n    handleInputChange = (e) => {\r\n        if (e.target.id === \"username\") {\r\n            this.setState({\r\n                username: e.target.value\r\n            });\r\n        } else if (e.target.id === \"password\") {\r\n            this.setState({\r\n                password: e.target.value\r\n            });\r\n        }\r\n    }\r\n    handleLoginSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props.location.state.referrer);\r\n        if(this.state.inputError.status){\r\n            this.setState({\r\n                error:{\r\n                    status:true,\r\n                    message:this.state.inputError.message  \r\n                }\r\n            })\r\n            \r\n        }else{\r\n        //set is loading to true;\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        const resp = await Requests.loginPost(this.state);\r\n        //resp has statusCode and message and status\r\n        const statusCode = resp.statusCode;\r\n        const message = resp.message.message;\r\n        console.log(statusCode);\r\n        if (statusCode === 200) {\r\n            \r\n            this.props.history.push(this.props.location.state.referrer ? \"main\" : this.props.location.state.referrer)\r\n            //redirect to other route\r\n        } else {\r\n            //display error message\r\n            this.setState({\r\n                error: {\r\n                    status: true,\r\n                    message: message\r\n                }\r\n            });\r\n\r\n        }\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        console.log(resp);\r\n    }\r\n}\r\n    validateInput = e => {\r\n        if (e.target.id === \"username\") {\r\n           if(this.state.username.length <6){\r\n               this.setState({\r\n                   inputError:{\r\n                       status:true,\r\n                       message:\"username too short\"\r\n                   }\r\n               })\r\n           }else{\r\n            this.setState({\r\n                inputError:{\r\n                    status:false,\r\n                    message:\"\"\r\n                }\r\n            })\r\n           }\r\n        } else if (e.target.id === \"password\") {\r\n            if(this.state.password.length <6){\r\n                this.setState({\r\n                    inputError:{\r\n                        status:true,\r\n                        message:\"password too short\"\r\n                    }\r\n                })\r\n            }else{\r\n             this.setState({\r\n                 inputError:{\r\n                     status:false,\r\n                     message:\"\"\r\n                 }\r\n             })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.error.status === true) {\r\n            NotificationManager.error('Error message', this.state.error.message, 1000, () => {\r\n                alert('callback');\r\n            });\r\n            this.setState({\r\n                error: {\r\n                    status: false,\r\n                    message: \"\"\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return (<div>\r\n\r\n            <div>{this.state.isLoading ? <LoadingButton /> : null}</div>\r\n            <div className=\" login-bar\">\r\n                <MDBContainer className=\"align-middle\">\r\n                    <MDBRow>\r\n                        <MDBCol md=\"6\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\r\n                                        <h3 className=\"my-3\">\r\n                                            <MDBIcon icon=\"lock\" /> Login:\r\n                                         </h3>\r\n                                    </MDBCardHeader>\r\n                                    <form onSubmit={(e) => { this.handleLoginSubmit(e) }}>\r\n                                        <div className=\"grey-text\">\r\n                                            <MDBInput label=\"username\" icon=\"user\"\r\n                                                id=\"username\"\r\n                                                onChange={(e) => { this.handleInputChange(e) }}\r\n                                                onBlur={(e) => { this.validateInput(e) }} />\r\n                                            <MDBInput label=\"password\" icon=\"lock\" group type=\"password\" validate\r\n                                                id=\"password\" onChange={(e) => { this.handleInputChange(e) }}\r\n                                                onBlur={(e) => { this.validateInput(e) }}  />\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <MDBBtn onClick={(e) => { this.handleLoginSubmit(e) }}>Login</MDBBtn>\r\n                                        </div>\r\n                                    </form>\r\n                                    <MDBModalFooter>\r\n                                        <div className=\"font-weight-light\">\r\n                                            <p>Not a member?  Sign Up</p>\r\n\r\n                                        </div>\r\n                                    </MDBModalFooter>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <NotificationContainer />\r\n            </div>\r\n\r\n\r\n        </div>);\r\n    };\r\n\r\n}",["52","53"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Constants.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\Requests.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\Utils\\AuthenticatedRoute.js",["54","55","56","57","58","59","60"],"import {Component} from \"react\";\r\nimport {  BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    history ,\r\n    useHistory,\r\n    useLocation} from 'react-router-dom'\r\n\r\nexport const AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      localStorage.getItem(\"token\")\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: \"login\",\r\n            state: { referrer: rest.path }\r\n          }} />\r\n    )} />\r\n)\r\n","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\LoadingButton.js",[],["61","62"],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\Signup.js",["63"],"import React from \"react\";\r\nimport Requests from  \"../Utils/Requests\"\r\nimport LoadingButton from \"./LoadingButton\"\r\nexport default class SignUp extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username :\"\",\r\n            password : \"\",\r\n            email : \"\",\r\n            confirmPassword : \"\",\r\n            isLoading : false,\r\n            responseError:{\r\n                status:false,\r\n                message:\"\"\r\n            },\r\n            inputError:{\r\n                status:false,\r\n                message:\"\"\r\n            }\r\n        }\r\n    }\r\n    handleInputChange = (e) =>{\r\n        if(e.target.id === \"username\"){\r\n        this.setState({\r\n          username : e.target.value        \r\n        });\r\n        }else if(e.target.id === \"password\"){\r\n            this.setState({\r\n                password:e.target.value\r\n            });\r\n        }else if(e.target.id === \"confirmPassword\"){\r\n            this.setState({\r\n                confirmPassword : e.target.value\r\n            });\r\n        }else if(e.target.id === \"email\"){\r\n            this.setState({\r\n                email : e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleLoginSubmit = e =>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n    handlePasswordMatch = e =>{\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            this.setState({\r\n               inputError :{\r\n                   status : true,\r\n                   message : \"passwords don't match\"\r\n               } \r\n            });\r\n        } else{\r\n            if(this.state.inputError.status){\r\n                this.setState({\r\n                    inputError : {\r\n                        status : false,\r\n                        message : \"\"\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (<div>\r\n            <h1>Hello world</h1>\r\n             <div>{this.state.isLoading ? <LoadingButton /> : null}</div>\r\n             \r\n            <hr></hr>\r\n            <form onSubmit = {(e)=>{this.handleLoginSubmit(e)}}>\r\n                <label>Username : <input type=\"text\" id = \"username\" onChange = {(e)=>{this.handleInputChange(e)}} /></label><hr />\r\n                <label>Password : \r\n                <input \r\n                 type=\"password\" \r\n                 id = \"password\" \r\n                 onChange = {(e) =>{this.handleInputChange(e)}} \r\n                 onBlur={e => this.handlePasswordMatch(e)}  /></label><hr />\r\n                <label>confirm password : \r\n                <input type=\"password\" \r\n                id=\"confirmPassword\" \r\n                onBlur={e => this.handlePasswordMatch(e)}  \r\n                onChange={e=>this.handleInputChange(e)} /></label><hr />\r\n                <label>email : <input type=\"text\" id=\"email\"  onChange = {(e) =>{this.handleInputChange(e)} }/> </label><hr />\r\n                <h4>{this.state.inputError.status ? this.state.inputError.message : null}</h4>\r\n                <button>SignUp</button>\r\n            </form><hr />\r\n             <h3>{this.state.responseError.status ? this.state.responseError.message : null}</h3>\r\n        </div>);\r\n    };\r\n}","C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Capstoneproject\\virtual refrigerator-front-end\\virtual-refrigerator\\src\\components\\MainPage.js",[],{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":5,"column":20,"nodeType":"66","messageId":"67","endLine":5,"endColumn":33},{"ruleId":"64","severity":1,"message":"69","line":5,"column":42,"nodeType":"66","messageId":"67","endLine":5,"endColumn":52},{"ruleId":"64","severity":1,"message":"70","line":5,"column":54,"nodeType":"66","messageId":"67","endLine":5,"endColumn":58},{"ruleId":"64","severity":1,"message":"71","line":5,"column":60,"nodeType":"66","messageId":"67","endLine":5,"endColumn":66},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"64","severity":1,"message":"76","line":1,"column":9,"nodeType":"66","messageId":"67","endLine":1,"endColumn":18},{"ruleId":"64","severity":1,"message":"77","line":2,"column":28,"nodeType":"66","messageId":"67","endLine":2,"endColumn":34},{"ruleId":"64","severity":1,"message":"78","line":3,"column":5,"nodeType":"66","messageId":"67","endLine":3,"endColumn":11},{"ruleId":"64","severity":1,"message":"79","line":5,"column":5,"nodeType":"66","messageId":"67","endLine":5,"endColumn":9},{"ruleId":"64","severity":1,"message":"80","line":7,"column":5,"nodeType":"66","messageId":"67","endLine":7,"endColumn":12},{"ruleId":"64","severity":1,"message":"81","line":8,"column":5,"nodeType":"66","messageId":"67","endLine":8,"endColumn":15},{"ruleId":"64","severity":1,"message":"82","line":9,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":16},{"ruleId":"72","replacedBy":"83"},{"ruleId":"74","replacedBy":"84"},{"ruleId":"64","severity":1,"message":"85","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Navigationbar' is defined but never used.","'Navigation' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'Component' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'history' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.",["86"],["87"],"'Requests' is defined but never used.","no-global-assign","no-unsafe-negation"]